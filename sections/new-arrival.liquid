<div class="page-width">
  <div class="flex flex-col md:flex-row gap-16">
    <!-- Left content section -->
    <div class="w-full md:w-[300px] pt-16 flex flex-col gap-4 justify-between items-end">
      <div>
        <p class="text-[#484848] font-volkhov text-[32px] sm:text-[40px] md:text-[46px] font-normal leading-normal mb-4">
          {{ section.settings.heading }}
        </p>
        <p class="text-[#8A8A8A] font-[Poppins] text-[14px] sm:text-[16px] font-normal leading-[26px] mb-8">
          {{ section.settings.subtext }}
        </p>
        <div class="flex items-center gap-4 justify-between">
          <a
            href="{{ section.settings.button_link }}"
            class="rounded-[10px] bg-black shadow-[0px_20px_35px_rgba(0,0,0,0.15)] text-white text-center font-[Poppins] text-[14px] sm:text-[16px] font-normal leading-[100%] py-[20px] px-[30px]"
          >
            {{ section.settings.button_text }}
          </a>
        </div>
      </div>

      <!-- Navigation buttons next to the View All Products button -->
      <div class="flex gap-2  ">
        <button class="slider-prev bg-white p-2 rounded-full shadow-md hover:bg-gray-50">
          <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
          </svg>
        </button>
        <button class="slider-next bg-white p-2 rounded-full shadow-md hover:bg-gray-50">
          <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
          </svg>
        </button>
      </div>
    </div>

    <!-- Right product slider section -->
    <div class="flex-1">
      <div class="product-carousel overflow-hidden">
        <div class="carousel-container flex transition-transform duration-300">
          {% for product in section.settings.products %}
            <div class="carousel-item w-[28.57%] flex-shrink-0 px-2">
              {% render 'product-card', product: product %}
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  class ProductCarousel {
    constructor(container) {
      this.container = container;
      this.carouselContainer = container.querySelector('.carousel-container');
      this.items = container.querySelectorAll('.carousel-item');
      this.prevBtn = container.querySelector('.slider-prev');
      this.nextBtn = container.querySelector('.slider-next');
      this.currentIndex = 0;
      this.itemsPerView = 3.5;

      this.init();
    }

    init() {
      this.prevBtn.addEventListener('click', () => this.slide('prev'));
      this.nextBtn.addEventListener('click', () => this.slide('next'));
      this.updateButtonsVisibility();
    }

    slide(direction) {
      if (direction === 'next' && this.currentIndex < this.items.length - this.itemsPerView) {
        this.currentIndex++;
      } else if (direction === 'prev' && this.currentIndex > 0) {
        this.currentIndex--;
      }

      const translateX = -(this.currentIndex * (100 / this.itemsPerView));
      this.carouselContainer.style.transform = `translateX(${translateX}%)`;
      this.updateButtonsVisibility();
    }

    updateButtonsVisibility() {
      this.prevBtn.style.display = this.currentIndex === 0 ? 'none' : 'block';
      this.nextBtn.style.display = this.currentIndex >= this.items.length - this.itemsPerView ? 'none' : 'block';
    }
  }

  // Initialize carousels
  document.querySelectorAll('.product-carousel').forEach((carousel) => {
    new ProductCarousel(carousel);
  });
</script>

{% schema %}
{
  "name": "New Arrivals",
  "settings": [
    { "type": "text", "id": "heading", "label": "Heading", "default": "New Arrivals" },
    { "type": "text", "id": "subtext", "label": "Subtext", "default": "Discover our latest products" },
    { "type": "product_list", "id": "products", "label": "Products" },
    { "type": "text", "id": "button_text", "label": "Button Text", "default": "View All Products" },
    { "type": "url", "id": "button_link", "label": "Button Link" }
  ],
  "presets": [{ "name": "New Arrivals" }]
}
{% endschema %}
