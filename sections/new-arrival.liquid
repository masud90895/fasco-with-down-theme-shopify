<div
  class="bg-gray-100"
  style="padding-top: {{ section.settings.padding_top }}px; padding-bottom: {{ section.settings.padding_bottom }}px;"
>
  <div
    class="page-width"
  >
    <div class="flex flex-col md:flex-row gap-16">
      <!-- Left content section -->
      <div class="w-full md:w-[300px] flex flex-col gap-4 justify-between items-end">
        <div>
          <p
            class="font-volkhov text-[32px] sm:text-[40px] md:text-[46px] font-normal leading-normal mb-4"
            style="color: {{ section.settings.heading_color }}"
          >
            {{ section.settings.heading }}
          </p>
          <p
            class="font-[Poppins] text-[14px] sm:text-[16px] font-normal leading-[26px] mb-8"
            style="color: {{ section.settings.subtext_color }}"
          >
            {{ section.settings.subtext }}
          </p>
          <div class="flex items-center gap-4 justify-between">
            <a
              href="{{ section.settings.button_link }}"
              class="rounded-[10px] shadow-[0px_20px_35px_rgba(0,0,0,0.15)] text-center font-[Poppins] text-[14px] sm:text-[16px] font-normal leading-[100%] py-[20px] px-[30px]"
              style="background-color: {{ section.settings.button_bg_color }}; color: {{ section.settings.button_text_color }}"
            >
              {{ section.settings.button_text }}
            </a>
          </div>
        </div>

        {% if section.settings.show_navigation %}
          <!-- Navigation buttons -->
          <div class="flex gap-3 md:gap-4 mb-4">
            <button
              class="slider-prev p-3 md:p-4 lg:p-5 rounded-full shadow-lg hover:shadow-xl hover:bg-gray-50 transition-all duration-300 border border-gray-100"
              style="background-color: {{ section.settings.nav_button_bg }}"
            >
              <svg
                width="24"
                height="24"
                fill="none"
                viewBox="0 0 24 24"
                class="transition-transform duration-300 hover:-translate-x-0.5 w-6 md:w-7 lg:w-8 h-6 md:h-7 lg:h-8"
                style="stroke: {{ section.settings.nav_button_color }}"
              >
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 19l-7-7 7-7"/>
              </svg>
            </button>
            <button class="slider-next bg-white p-3 md:p-4 lg:p-5 rounded-full shadow-lg hover:shadow-xl hover:bg-gray-50 transition-all duration-300 border border-gray-100">
              <svg
                width="24"
                height="24"
                md:width="28"
                md:height="28"
                lg:width="32"
                lg:height="32"
                fill="none"
                stroke="#484848"
                viewBox="0 0 24 24"
                class="transition-transform duration-300 hover:translate-x-0.5 w-6 md:w-7 lg:w-8 h-6 md:h-7 lg:h-8"
              >
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M9 5l7 7-7 7"/>
              </svg>
            </button>
          </div>
        {% endif %}
      </div>

      <!-- Right product slider section -->
      <div class="flex-1">
        <div class="product-carousel overflow-hidden relative">
          <div class="carousel-container flex transition-transform duration-300 ease-in-out">
            {% for product in section.settings.products %}
              <div class="carousel-item w-full sm:w-1/2 md:w-1/3 lg:w-[28.57%] flex-shrink-0 px-2">
                {% render 'product-card', product: product %}
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  class ProductCarousel {
    constructor(container) {
      this.container = container;
      this.carouselContainer = container.querySelector('.carousel-container');
      this.items = container.querySelectorAll('.carousel-item');
      this.prevBtn = document.querySelector('.slider-prev');
      this.nextBtn = document.querySelector('.slider-next');
      this.currentIndex = 0;

      // Responsive items per view
      this.getItemsPerView = () => {
        if (window.innerWidth < 640) return 1; // mobile
        if (window.innerWidth < 768) return 2; // tablet
        if (window.innerWidth < 1024) return 3; // small desktop
        return 3.5; // large desktop
      };

      this.itemsPerView = this.getItemsPerView();
      this.init();
    }

    init() {
      if (!this.prevBtn || !this.nextBtn || this.items.length === 0) return;

      this.prevBtn.addEventListener('click', () => this.slide('prev'));
      this.nextBtn.addEventListener('click', () => this.slide('next'));

      // Handle window resize
      window.addEventListener('resize', () => {
        this.itemsPerView = this.getItemsPerView();
        this.slide('current');
        this.updateButtonsVisibility();
      });

      this.updateButtonsVisibility();
    }

    slide(direction) {
      if (direction === 'next' && this.currentIndex < this.items.length - this.itemsPerView) {
        this.currentIndex++;
      } else if (direction === 'prev' && this.currentIndex > 0) {
        this.currentIndex--;
      }

      const translateX = -(this.currentIndex * (100 / this.itemsPerView));
      this.carouselContainer.style.transform = `translateX(${translateX}%)`;
      this.updateButtonsVisibility();
    }

    updateButtonsVisibility() {
      if (!this.prevBtn || !this.nextBtn) return;
      this.prevBtn.style.visibility = this.currentIndex === 0 ? 'hidden' : 'visible';
      this.nextBtn.style.visibility = this.currentIndex >= this.items.length - this.itemsPerView ? 'hidden' : 'visible';
    }
  }

  // Initialize carousel when DOM is fully loaded
  document.addEventListener('DOMContentLoaded', () => {
    const carousels = document.querySelectorAll('.product-carousel');
    carousels.forEach((carousel) => {
      new ProductCarousel(carousel);
    });
  });
</script>

{% schema %}
{
  "name": "New Arrivals",
  "settings": [
    {
      "type": "header",
      "content": "Content Settings"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "New Arrivals"
    },
    {
      "type": "text",
      "id": "subtext",
      "label": "Subtext",
      "default": "Discover our latest products"
    },
    {
      "type": "product_list",
      "id": "products",
      "label": "Products"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "View All Products"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "header",
      "content": "Color Settings"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading Color",
      "default": "#484848"
    },
    {
      "type": "color",
      "id": "subtext_color",
      "label": "Subtext Color",
      "default": "#8A8A8A"
    },
    {
      "type": "color",
      "id": "button_bg_color",
      "label": "Button Background Color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button Text Color",
      "default": "#FFFFFF"
    },
    {
      "type": "header",
      "content": "Layout Settings"
    },
    {
      "type": "select",
      "id": "desktop_products_per_row",
      "label": "Products per row on desktop",
      "options": [
        {
          "value": "2",
          "label": "2"
        },
        {
          "value": "3",
          "label": "3"
        },
        {
          "value": "4",
          "label": "4"
        }
      ],
      "default": "3"
    },
    {
      "type": "select",
      "id": "mobile_products_per_row",
      "label": "Products per row on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Padding Top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 60
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Padding Bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 60
    },
    {
      "type": "header",
      "content": "Navigation Settings"
    },
    {
      "type": "color",
      "id": "nav_button_bg",
      "label": "Navigation Button Background",
      "default": "#FFFFFF"
    },
    {
      "type": "color",
      "id": "nav_button_color",
      "label": "Navigation Button Icon Color",
      "default": "#484848"
    },
    {
      "type": "checkbox",
      "id": "show_navigation",
      "label": "Show Navigation Buttons",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "New Arrivals",
      "category": "Product"
    }
  ]
}
{% endschema %}
